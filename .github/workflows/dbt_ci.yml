name: CI/CD Pipeline for dbt

on:
  push:
    branches:
      - master  
  pull_request:
    branches:
      - master

jobs:
  dbt_test:
    runs-on: ubuntu-latest

    steps:
    - name: Check out repository
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install dbt-core dbt-bigquery

    - name: Set environment variable for Google Cloud Credentials
      env:
        GOOGLE_CREDENTIALS_JSON: ${{ secrets.DOCKER_GOOGLE_APPLICATION_CREDENTIALS }}
      run: |
        echo "$GOOGLE_CREDENTIALS_JSON" > /tmp/gcp_credentials.json  
        ls -la /tmp/gcp_credentials.json  
        cat /tmp/gcp_credentials.json  

    - name: Set up Google Cloud Credentials
      run: |
        export DOCKER_GOOGLE_APPLICATION_CREDENTIALS="/tmp/gcp_credentials.json"
        echo $DOCKER_GOOGLE_APPLICATIONS_CREDENTIALS

    - name: Set up dbt profile
      run: |
        mkdir -p ~/.dbt
        cp config/dbt/profiles.yml ~/.dbt/profiles.yml  

    - name: Run dbt models
      env:
        GCP_PROJECT_ID: ${{ vars.GCP_PROJECT_ID }}  
        BIGQUERY_DATASET: ${{ vars.BIGQUERY_DATASET }}  
        DOCKER_GOOGLE_APPLICATION_CREDENTIALS: /tmp/gcp_credentials.json  
      run: |
        dbt deps  # Install dbt packages
        dbt compile
      working-directory: ./src/transform  

    - name: Run dbt tests
      env:
        GCP_PROJECT_ID: ${{ vars.GCP_PROJECT_ID }}  
        BIGQUERY_DATASET: ${{ vars.BIGQUERY_DATASET }}  
        DOCKER_GOOGLE_APPLICATION_CREDENTIALS: /tmp/gcp_credentials.json  
      run: |
        dbt test
      working-directory: ./src/transform  
      
  docker-compose-test:
    runs-on: ubuntu-latest

    env:
      LOCAL_GOOGLE_APPLICATION_CREDENTIALS: /tmp/gcp_credentials.json

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Set up Docker Compose
        run: sudo apt-get update && sudo apt-get install docker-compose -y

      - name: Set environment variable for Google Cloud Credentials
        env:
          GOOGLE_CREDENTIALS_JSON: ${{ secrets.DOCKER_GOOGLE_APPLICATION_CREDENTIALS }}
        run: |
          echo "$GOOGLE_CREDENTIALS_JSON" > /tmp/gcp_credentials.json  
          ls -la /tmp/gcp_credentials.json  
          cat /tmp/gcp_credentials.json

      - name: Build and start services
        working-directory: ./docker  # Specify the Docker Compose file location
        run: docker-compose up -d --build

      - name: Wait for services to be healthy
        working-directory: ./docker  # Specify the Docker Compose file location
        run: |
          echo "Waiting for Postgres to be ready..."
          until docker exec postgres-db pg_isready; do sleep 1; done
          echo "Postgres is ready!"
          echo "Waiting for Airflow Webserver to be ready..."
          until docker logs airflow-webserver | grep -m 1 "Listening at"; do sleep 1; done
          echo "Airflow Webserver is ready!"

      - name: Run basic health check
        run: |
          curl -f http://localhost:8080 || exit 1

      - name: Tear down
        working-directory: ./docker  # Specify the Docker Compose file location
        if: always()
        run: docker-compose down