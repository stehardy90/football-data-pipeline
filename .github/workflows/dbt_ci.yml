name: CI/CD Pipeline for dbt

on:
  push:
    branches:
      - master  
  pull_request:
    branches:
      - master

jobs:
  dbt_test:
    runs-on: ubuntu-latest

    steps:
    - name: Check out repository
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install dbt-core dbt-bigquery

    - name: Set environment variable for Google Cloud Credentials
      env:
        GOOGLE_CREDENTIALS_JSON: ${{ secrets.DOCKER_GOOGLE_APPLICATION_CREDENTIALS }}
      run: |
        echo "$GOOGLE_CREDENTIALS_JSON" > /tmp/gcp_credentials.json  
        ls -la /tmp/gcp_credentials.json  
        cat /tmp/gcp_credentials.json  

    - name: Set up Google Cloud Credentials
      run: |
        export DOCKER_GOOGLE_APPLICATION_CREDENTIALS="/tmp/gcp_credentials.json"
        echo $DOCKER_GOOGLE_APPLICATIONS_CREDENTIALS

    - name: Set up dbt profile
      run: |
        mkdir -p ~/.dbt
        cp config/dbt/profiles.yml ~/.dbt/profiles.yml  

    - name: Run dbt models
      env:
        GCP_PROJECT_ID: ${{ vars.GCP_PROJECT_ID }}  
        BIGQUERY_DATASET: ${{ vars.BIGQUERY_DATASET }}  
        DOCKER_GOOGLE_APPLICATION_CREDENTIALS: /tmp/gcp_credentials.json  
      run: |
        dbt deps  # Install dbt packages
        dbt run
      working-directory: ./src/transform  

    - name: Run dbt tests
      env:
        GCP_PROJECT_ID: ${{ vars.GCP_PROJECT_ID }}  
        BIGQUERY_DATASET: ${{ vars.BIGQUERY_DATASET }}  
        DOCKER_GOOGLE_APPLICATION_CREDENTIALS: /tmp/gcp_credentials.json  
      run: |
        dbt test
      working-directory: ./src/transform  
      
  ingest_test:
    runs-on: ubuntu-latest

    env:
      API_KEY: ${{ secrets.API_KEY }}
      GCP_PROJECT_ID: ${{ vars.GCP_PROJECT_ID }}
      BIGQUERY_DATASET: ${{ vars.BIGQUERY_DATASET }}
      DOCKER_GOOGLE_APPLICATION_CREDENTIALS: ${{ secrets.DOCKER_GOOGLE_APPLICATION_CREDENTIALS }}
      COMPETITION_IDS: ${{ vars.COMPETITION_IDS }}
      API_RESOURCES: ${{ vars.API_RESOURCES }}
      PYTHONPATH: ./src  # Add this line to set PYTHONPATH

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'
          
      - name: Write Service Account Key to File
        run: |
          echo "${{ secrets.DOCKER_GOOGLE_APPLICATION_CREDENTIALS }}" > /tmp/keyfile.json
        shell: bash

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests
        env:
          DOCKER_GOOGLE_APPLICATION_CREDENTIALS: /tmp/keyfile.json  # Point to the file path
        run: |
          pytest -v --maxfail=1 --disable-warnings


